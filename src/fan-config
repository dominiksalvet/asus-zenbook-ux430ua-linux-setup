#!/bin/bash

#-------------------------------------------------------------------------------
# Copyright (C) 2017-2018 Dominik Salvet
# SPDX-License-Identifier: MIT
#-------------------------------------------------------------------------------

## SOFTWARE DEPENDECIES

sw_required='echo [ cat printf'

# check if some software is missing
for i in $sw_required; do
    # software is missing if at least one piece of software is missing
    if ! command -v "$i" > /dev/null; then
        echo "$0: Required software \"$i\" is missing, configuration canceled." >&2
        exit 1
    fi
done

## DEFINITIONS

# base address for fan speed configuration
FAN_SPEED_BASE_ADDR=1335

# array of temperatures (in Celsius) per each fan speed level
fan_temps=(55 60 62 65 68 72 76 80)

# direct ACPI call
function acpi_call {
    # $1 would work in this case, but the following solution is safer due to possible reuse
    echo "$*" > /proc/acpi/call
    cat /proc/acpi/call
    echo
}

# convert number from decimal to hexadecimal form
function dec_to_hex {
    printf '%X' "$1"
}

# get address of each fan speed level
function level_to_addr {
    echo $((FAN_SPEED_BASE_ADDR + $1))
}

# assigning fan speed level and temperature
function level_temp_set {
    acpi_call '\_SB.PCI0.LPCB.EC0.WRAM '"0x$(dec_to_hex "$(level_to_addr "$1")") 0x$(dec_to_hex "$2")"
}

## EXECUTION

# check "fan_temps" length
if [ ${#fan_temps[@]} != 8 ]; then
    echo "$0: Length of the \"fan_temps\" array must be exactly 8." >&2
    exit 2
fi

# setup each individual fan speed level
level_temp_set 7 "${fan_temps[7]}"
level_temp_set 6 "${fan_temps[6]}"
level_temp_set 5 "${fan_temps[5]}"
level_temp_set 4 "${fan_temps[4]}"
level_temp_set 3 "${fan_temps[3]}"
level_temp_set 2 "${fan_temps[2]}"
level_temp_set 1 "${fan_temps[1]}"
level_temp_set 0 "${fan_temps[0]}"

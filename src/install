#!/bin/bash

#-------------------------------------------------------------------------------
# Copyright (C) 2017-2018 Dominik Salvet
# SPDX-License-Identifier: MIT
#-------------------------------------------------------------------------------
# Parameters:
#     $1 - installation directory path
#-------------------------------------------------------------------------------

## SOFTWARE DEPENDECIES

sw_missing=0
# software is missing if at least one piece of software is missing
$(type echo > /dev/null); ((sw_missing |= $?))
$(type cd > /dev/null); ((sw_missing |= $?))
$(type dirname > /dev/null); ((sw_missing |= $?))
$(type read > /dev/null); ((sw_missing |= $?))
$(type grep > /dev/null); ((sw_missing |= $?))
$(type cat > /dev/null); ((sw_missing |= $?))
$(type apt > /dev/null); ((sw_missing |= $?))
$(type chmod > /dev/null); ((sw_missing |= $?))
$(type sed > /dev/null); ((sw_missing |= $?))
$(type ln > /dev/null); ((sw_missing |= $?))

# check if some software is missing
if [[ "$sw_missing" -ne 0 ]]; then
    echo 'Required software is missing, installation canceled.'
    exit 1
fi

## USER SETUP

# check if running as root
if [ "$EUID" -ne 0 ]; then
    echo 'Please run as root, installation canceled.'
    exit 2
fi

# change directory to the script directory
cd "$(dirname "$0")"

# notice
echo
echo 'Notice:'
echo 'The "/etc/rc.local" file will be created if it does not exist.'
echo 'Option 1) will install "alsa-tools" package.'
echo 'Option 2) will install "acpi-call-dkms" package.'
echo

# installation setup
echo 'Installation setup:'
read -p '1) Configure 3.5 mm jack output volume to be louder? [y/n] ' jack_config
read -p '2) Configure the fan speed policy to be less aggressive? [y/n] ' fan_config
echo

# check if at least one option selected
if [[ $jack_config != y ]] && [[ $fan_config != y ]]; then
    echo 'No option selected, installation canceled.'
    exit
fi

read -p 'Are you really sure to proceed? [y/n] ' user_agreed
if [[ $user_agreed != y ]]; then
    echo 'Installation canceled.'
    exit
fi

echo
echo '================================================================================'
echo
echo 'Installing ...'

# description of line containing a successful exit of a shell script
find_exit_0='^[^#]*exit\(\|\s\s*00*\)\s*\(\|#.*\)$'

## FILE DEPENDENCIES

# create /etc/rc.local file if it does not exist
if [ ! -e /etc/rc.local ]; then
    echo -e '#!/bin/sh -e\n\nexit 0' > /etc/rc.local
# append a successful exit if it does not contain one
elif ! grep -q "$find_exit_0" /etc/rc.local; then
    echo 'exit 0' >> /etc/rc.local
fi

if [[ $jack_config = y ]]; then
    # check if jack-config file exists
    if [ ! -e jack-config ]; then
        echo 'The jack-config file does not exist, installation canceled.'
        exit 3
    else
        # load jack-config file content into variable
        jack_config_string=$(cat 'jack-config')
    fi
fi

if [[ $fan_config = y ]]; then
    # check if fan-config file exists
    if [ ! -e fan-config ]; then
        echo 'The fan-config file does not exist, installation canceled.'
        exit 4
    else
        # load fan-config file content into variable
        fan_config_string=$(cat 'fan-config')
    fi
fi

## INSTALLATION

# apply 3.5 mm jack output volume setup
if [[ $jack_config = y ]]; then
    apt install alsa-tools -y

    echo "$jack_config_string" > $1/jack-config
    chmod a+x $1/jack-config
    sed -i -e '0,/'"$find_exit_0"'/s||'"$1"'/jack-config\n&|' /etc/rc.local
    ln -s $1/jack-config /lib/systemd/system-sleep/jack-config
fi

# apply less aggressive fan speed policy setup
if [[ $fan_config = y ]]; then
    apt install acpi-call-dkms -y
    echo 'acpi_call' >> /etc/modules

    echo "$fan_config_string" > $1/fan-config
    chmod a+x $1/fan-config
    sed -i -e '0,/'"$find_exit_0"'/s||'"$1"'/fan-config\n&|' /etc/rc.local
    ln -s $1/fan-config /lib/systemd/system-sleep/fan-config
fi

# finished
echo
echo '================================================================================'
echo
echo 'Done! In order to apply the changes, reboot your machine.'

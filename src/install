#!/bin/bash

#-------------------------------------------------------------------------------
# Copyright (C) 2017-2018 Dominik Salvet
# SPDX-License-Identifier: MIT
#-------------------------------------------------------------------------------
# Parameters:
#     $1 - installation directory path
#-------------------------------------------------------------------------------

## SOFTWARE DEPENDECIES

SW_REQUIRED='echo [ cd dirname printf read grep cat apt chmod sed ln'

# check if some software is missing
for i in $SW_REQUIRED; do
    # software is missing if at least one piece of software is missing
    if ! command -v "$i" > /dev/null; then
        echo "$0: Required software \"$i\" is missing, installation canceled." >&2
        exit 1
    fi
done

## USER SETUP

# check if running as root
if [ $EUID -ne 0 ]; then
    echo "$0: Please run as root, installation canceled." >&2
    exit 2
fi

# change directory to the script directory
cd -- "$(dirname -- "$0")" || exit 3

# notice
echo 'Notice:'
echo 'The "/etc/rc.local" file will be created if it does not exist.'
echo 'Option 1) will also install "alsa-tools" package.'
echo 'Option 2) will also install "acpi-call-dkms" package.'
echo

# check if any previously installed files exist
jack_config_exist=n; if [ -e "$1/jack-config" ]; then jack_config_exist=y; fi
fan_config_exist=n; if [ -e "$1/fan-config" ]; then fan_config_exist=y; fi

# installation setup
echo 'Installation setup:'
printf '1) Set up 3.5 mm jack output volume to be louder? [y/n] '
if [ $jack_config_exist = y ]; then
    echo 'n (already set up)'
    setup_jack=n
else
    read -r setup_jack
fi
printf '2) Set up the fan speed policy to be less aggressive? [y/n] '
if [ $fan_config_exist = y ]; then
    echo 'n (already set up)'
    setup_fan=n
else
    read -r setup_fan
fi
echo

# check if at least one option selected
if [ "$setup_jack" != y ] && [ "$setup_fan" != y ]; then
    echo 'No option selected, installation canceled.'
    exit
fi

# summary
echo 'Summary:'
if [ "$setup_jack" = y ]; then echo 'The 1) option will be applied.'; fi
if [ "$setup_fan" = y ]; then echo 'The 2) option will be applied.'; fi

# user confirmation
echo
read -r -p 'Are you really sure to continue? [y/n] ' user_agreed
if [ "$user_agreed" != y ]; then
    echo 'Installation canceled.'
    exit
fi

echo
echo '================================================================================'
echo
echo 'Installing ...'

# regular expression of line containing a successful exit of a shell script
FIND_EXIT_0='^[^#]*exit\(\|\s\s*00*\)\s*\(\|#.*\)$'

## FILE DEPENDENCIES

if [ "$setup_jack" = y ]; then
    # check if jack-config file exists
    if [ ! -e jack-config ]; then
        echo "$0: The \"jack-config\" file does not exist, installation canceled." >&2
        exit 4
    else
        # load jack-config file content into variable
        jack_config_string=$(cat jack-config)
    fi
fi

if [ "$setup_fan" = y ]; then
    # check if fan-config file exists
    if [ ! -e fan-config ]; then
        echo "$0: The \"fan-config\" file does not exist, installation canceled." >&2
        exit 5
    else
        # load fan-config file content into variable
        fan_config_string=$(cat fan-config)
    fi

    # check if use custom fan speed level temperatures
    echo 'Default temperatures per each fan speed level: 55 60 62 65 68 72 76 80'
    echo 'Enter custom temperatures or hit enter to use the default ones.'
    # parse user input
    custom_fan_temps_valid=n
    while [ $custom_fan_temps_valid = n ]; do
        read -r -p "> " custom_fan_temps
        if [ -z "$custom_fan_temps" ]; then
            custom_fan_temps_valid=y
        else
            # check if valid temperatures format
            if echo "$custom_fan_temps" | grep -q -e '^[0-9]\+ [0-9]\+ [0-9]\+ [0-9]\+ [0-9]\+ [0-9]\+ [0-9]\+ [0-9]\+$'; then
                custom_fan_temps_valid=y
                # modify the script loaded in the variable to reflect new temperature levels
                fan_config_string=$(echo "$fan_config_string" | sed -e '/^FAN_TEMPS/!b;s/(.*)/('"$custom_fan_temps"')/')
            fi
        fi
    done
fi

# create /etc/rc.local file if it does not exist
if [ ! -e /etc/rc.local ]; then
    echo -e '#!/bin/sh -e\n\nexit 0' > /etc/rc.local
# append a successful exit if it does not contain one
elif ! grep -q -e "$FIND_EXIT_0" /etc/rc.local; then
    echo 'exit 0' >> /etc/rc.local
fi

## INSTALLATION

# apply 3.5 mm jack output volume setup
if [ "$setup_jack" = y ]; then
    apt install alsa-tools -y

    echo "$jack_config_string" > "$1/jack-config"
    chmod a+x "$1/jack-config"
    sed -i -e '0,/'"$FIND_EXIT_0"'/s||'"$1"'/jack-config\n&|' /etc/rc.local
    ln -s -- "$1/jack-config" /lib/systemd/system-sleep/jack-config
fi

# apply less aggressive fan speed policy setup
if [ "$setup_fan" = y ]; then
    apt install acpi-call-dkms -y
    echo 'acpi_call' >> /etc/modules

    echo "$fan_config_string" > "$1/fan-config"
    chmod a+x "$1/fan-config"
    sed -i -e '0,/'"$FIND_EXIT_0"'/s||'"$1"'/fan-config\n&|' /etc/rc.local
    ln -s -- "$1/fan-config" /lib/systemd/system-sleep/fan-config
fi

# finished
echo
echo '================================================================================'
echo
echo 'Done! In order to apply the changes, reboot your machine.'
